В этом классе реализуем подобие LinkedList.
Список есть динамическая структура данных.
Связный список, здесь - это набор объектов класса Node, а в LinkedList Java
это набор объектов класса Node<E>, с генериками.
У нас будет односвязный список и не параметризованный,
в отличие от LinkedList<>() в Java, который двухсвязный и параметризованный.


Наш MyLinkedList будет хранить только целые числа.

Здесь будут реализованы только некоторые методы.

Еще раз повторюсь, связный список - это набор объектов класса Node<E>, и связаны они благодаря тому что
каждый объект класса Node<E> имеет ссылку на другой элемент класса Node<E> (предыдущий или следующий).
Получается такой себе паровозик из вагончиков (список), растянутый по памяти. А ссылки, это как бы,
верёвочки между этими вагончиками паровозика.
В отличие от массива, который хранит элементы списка в памяти подряд.
Вся работа ссылочного контейнера сводится к тому что бы организовать наши элементы Node<E>,
например, прербросить ссылки в момент добавления или удаления элементов.
Т.е. организовать работу со ссылками между элементами.
Код написан по уроку Наиля Алишева "Продвинутая Java Alishev" => "2. Java Collections Framework (Коллекции)"
=> "4. Связный список (LinkedList) - Как устроен"

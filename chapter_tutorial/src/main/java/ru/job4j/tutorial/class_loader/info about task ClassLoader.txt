Перезагрузка классов «на лету»

http://java-online.ru/java-classloader.xhtml#top
//*[@id="desk"]/table/tbody/tr/td/h2[3]

Предположим, разрабатывается большая программа на Java. По каким-либо причинам эту программу нежелательно часто
перезагружать: останавливать и запускать снова. Например, это может быть сложная серверная программа, каждую секунду
обслуживающая многих клиентов, для которой даже сравнительно кратковременная неработоспособность является критичной.
Или просто программа настолько «тяжелая», что полный ее перезапуск требует несколько минут, и часто перезапускать ее
крайне неудобно. В то же время программа постоянно развивается. Создаются новые независимые блоки, переписываются и
отлаживаются старые. Возможно, программа «умеет» исполнять сторонние классы, разработанные пользователями. В таких
условиях возникает естественное желание, чтобы подключение новых классов или новых версий старых классов не требовало
полной остановки и перезапуска программы.

Что касается действительно новых классов – тут проблем нет.
Можно в любой момент скомпилировать новый класс с новым уникальным именем – даже когда программа уже запущена.
Если ваша программа после этого выполнит вызов Class.forName(name) с этим именем (например, в результате
автоматического сканирования каталогов поиска CLASSPATH в поисках новых .class-файлов), то этот класс будет успешно
подключен, и программа сможет им пользоваться.

Что касается версий .class-файлов – тут все значительно хуже.
Однажды обратившись к некоторому классу, стандартный системный загрузчик запомнит его в своем внутреннем кэше и будет
всегда использовать именно его. Никакие последующие перекомпиляции .class-файла и даже физическое удаление этого
файла не отразятся на работе этого класса. Кроме полного перезапуска программы (т.е. всей виртуальной машины Java),
нельзя заставить системный загрузчик «забыть» тот байт-код класса, который он однажды загрузил.

Итак, основная задача – написать загрузчик классов, аналогичный стандартному системному, который, в отличие от него,
умел бы «забывать» загруженные ранее версии классов и загружать .class-файлы заново.

Заодно будет решена и более простая традиционная задача – загрузка .class-файлов из собственного списка каталогов
поиска. Это ничего не будет стоить, т.к. какая разница – загружать файлы непременно из каталогов CLASSPATH или из
каких-либо других. Необходимо учесть, что некоторые (или все) каталоги CLASSPATH могут попасть в наш список.

Для простоты не будем поддерживать в этом загрузчике работу с JAR-архивами. Все-таки JAR предназначен для упаковки
достаточно стабильных версий программных модулей, которые вряд ли стоит обновлять настолько часто, что ради этого
нежелательно выполнять перезапуск основной Java-программы. В частности, загрузку стандартных библиотечных классов
(пакеты java.lang и подобные), которые обычно находятся в JAR-файле, мы возложим на системный загрузчик.

Назовем новый загрузчик DynamicClassOverloader – «динамический перезагрузчик классов».
